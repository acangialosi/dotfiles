# yaml-language-server: $schema=https://aka.ms/configuration-dsc-schema/0.2
properties:
  configurationVersion: 0.2.0
  ########################################
  ### ASSERTIONS: System Requirements
  ########################################
  assertions:
    ### Assertion: OS Version
    ### -------------------------------------
    - resource: Microsoft.Windows.Developer/OsVersion
      id: OsVersion
      directives:
        description: Minimum OS version requirement
        allowPrerelease: true
      settings:
        MinVersion: "10.0.22000"
  ########################################
  ### RESOURCES: System Configuration
  ########################################
  resources:
   ########################################
   ### Initialization
   ########################################
   ### Format a new Dev Drive
   ### -------------------------------------
   - resource: Disk
     id: devdrive
     directives:
       description: 'Format a new Dev Drive volume onto Disk 0'
       module: StorageDsc
       allowPrerelease: true
     settings:
       DiskId: '0'
       DiskIdType: 'Number'
       DriveLetter: 'Z'
       FSLabel: 'Dev Drive 1'
       DevDrive: true
       AllowDestructive: true
       FSFormat: 'ReFS'
       Size: '50Gb'
   ### Install Git
   ### -------------------------------------
   - resource: Microsoft.WinGet.DSC/WinGetPackage
     id: git
     directives:
       description: Install Git
       allowPrerelease: true
     settings:
       id: Git.Git
   ### Clone dotfiles repository
   ### -------------------------------------
   - resource: GitDsc/GitClone
     id: mydotifiles
     dependsOn:
       - git
       - devdrive
     directives:
       description: Clone WinGet CLI GitHub repository
       allowPrerelease: true
     settings:
       HttpsUrl: https://github.com/acangialosi/dotfiles
       RootDirectory: z:\src
       Ensure: Present
   ########################################
   ### OS Configurations
   ########################################
   ### Install Windows VirtualMachinePlatform
   ### -------------------------------------
   - resource: PSDscResources/WindowsOptionalFeature
     directives:
       description: Install VirtualMachinePlatform
     settings:
       name: VirtualMachinePlatform
       ensure: Present
   ### Install WSL
   ### -------------------------------------
   - resource: PSDscResources/WindowsOptionalFeature
     directives:
       description: Install WSL
     settings:
       name: Microsoft-Windows-Subsystem-Linux
       ensure: Present
   ### Enable: Developer Mode
   ### -------------------------------------
   - resource: Microsoft.Windows.Developer/DeveloperMode
     directives:
       description: Enable Developer Mode
       allowPrerelease: true
     settings:
       Ensure: Present
    ### Show file extensions and hidden files
    ### -------------------------------------
   - resource: Microsoft.Windows.Developer/WindowsExplorer
     directives:
       description: Show File Extensions and hidden files
       allowPrerelease: true
     settings:
       FileExtensions: Show
       HiddenFiles: Show
   ### Set theme to Dark
   ### -------------------------------------
   - resource: Microsoft.Windows.Developer/EnableDarkMode
     directives:
       description: Set theme to Dark
       allowPrerelease: true
     settings:
       Ensure: Present
       RestartExplorer: true
   ########################################
   ### Install CLIs, SDKs & Tools
   ########################################
   ### Install DevHome
   ### -------------------------------------
   - resource: Microsoft.WinGet.DSC/WinGetPackage
     directives:
       description: Install DevHome
       allowPrerelease: true
     settings:
       id: Microsoft.DevHome
   ### Install Powershell
   ### -------------------------------------
   - resource: Microsoft.WinGet.DSC/WinGetPackage
     directives:
       description: Install Powershell
       allowPrerelease: true
     settings:
       id: Microsoft.PowerShell
   ### Install OMP
   ### -------------------------------------
   - resource: Microsoft.WinGet.DSC/WinGetPackage
     id: OMP
     directives:
       description: Install Oh My Posh
       allowPrerelease: true
     settings:
       id: JanDeDobbeleer.OhMyPosh
   ### Install Azd
   ### -------------------------------------
   - resource: Microsoft.WinGet.DSC/WinGetPackage
     directives:
       description: Install Azd
       allowPrerelease: true
     settings:
       id: Microsoft.Azd
   ### Install GitKraken
   ### -------------------------------------
   - resource: Microsoft.WinGet.DSC/WinGetPackage
     directives:
       description: Install GitKraken
       allowPrerelease: true
     settings:
       id: Axosoft.GitKraken
   ### Install Visual Studio Code
   ### -------------------------------------
   - resource: Microsoft.WinGet.DSC/WinGetPackage
     id: vscode
     directives:
       description: Install Microsoft Visual Studio Code
       allowPrerelease: true
     settings:
       id: Microsoft.VisualStudioCode
       ensure: Present
   ### Install Visual Sudio
   ### -------------------------------------
   - resource: Microsoft.WinGet.DSC/WinGetPackage
     id: vsenterprise
     directives:
      description: Install Visual Studio 2022 Enterprise
      allowPrerelease: true
     settings:
       id: Microsoft.VisualStudio.2022.Enterprise.Preview
   ### Install VS Workloads
   ### -------------------------------------
   - resource: Microsoft.VisualStudio.DSC/VSComponents
     directives:
       description: Install required VS workloads from vsconfig file
       allowPrerelease: true
     dependsOn:
       - mydotifiles
       - vsenterprise
     settings:
       productId: Microsoft.VisualStudio.Product.Enterprise
       channelId: VisualStudio.17.Preview
       VsConfigFile: 'z:\src\dotfiles\visualstudio\extensions\extensions.vsconfig'
       includeRecommended: true
       allowUnsignedExtensions: true
   ########################################
   ### Configure settings
   ########################################
   ### Configure Git
   ### -------------------------------------
   - resource: PSDscResources/Script
     directives:
       description: Configure Git
     dependsOn:
       - git
     settings:
       SetScript: |
         $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User") 
         git config --global user.name "Anthony Cangialosi [MS]"
         git config --global user.email 5457010+acangialosi@users.noreply.github.com
       GetScript: return $false
       TestScript: return $false
   ### Configure Visual Studio settings
   ### -------------------------------------
   - resource: Environment
     directives:
      description: Set Visual Studio Unified Settings Profile environment variable
     dependsOn:
       - mydotifiles
     settings:
      Name: VS_UNIFIED_SETTINGS_PROFILE
      Value: 'Z:\src\dotfiles\visualstudio\settings\devbox'
      Ensure: Present
   ### Install VS Code Extensions
   ### -------------------------------------
   - resource: PSDscResources/Script
     id: vscodeextensions
     dependsOn:
       - vscode
     directives:
       description: Install Python Extension for VS Code
     settings:
       SetScript: |
         $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User") 
         code --install-extension devcenter.ms-devbox
         code --install-extension ms-vscode.powershell
         code --install-extension ms-vscode-remote.remote-containers
         code --install-extension ms-dotnettools.csdevkit
         code --install-extension ms-dotnettools.csharp
         code --install-extension ms-dotnettools.vscode-dotnet-runtime
         code --install-extension ms-vscode.vscode-node-azure-pack
         code --install-extension ms-azuretools.azure-dev
         code --install-extension undefined_publisher.devbox
       GetScript: return $false
       TestScript: return $false
